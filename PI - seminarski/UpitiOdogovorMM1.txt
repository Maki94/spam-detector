\subsection{Task 4}
Odrediti 3 najrelevantnija dokumenta za upit $[t_1,\ t_3, \ t_9]$. \\

Upit æemo predstaviti kao dokument. Kako je upit $[t_1,\ t_3, \ t_9]$ predpostavimo da upit posmatran kao dokument ima samo te termine. Ovaj algoritam od nas zahteva da kako upit posmatramo kao dokument, uporedimo ga sa svim
 dokumentima iz korpusa i izbacimo samo k najbližih. 
 Dokumenta koja posmatramo su dokumenta iz posting listi datih termina ovo je ubrzanje. Samo za njih raèunamo razliku od upita. Kako je veoma retko da se u upitu jedna rec javi vise od jedanput predpostavimo da se u upitu svaka reè javlja samo jednom da bi skratili raèunicu, i ovo je takoðe ubrzanje. 
 Od nas se zahteva da izbacimo prvih k dokumenata. Još jedno ubrazanje 
 koje se moze iskoristiti jeste korišæenje 
 heap-a 
 za sortiranje
  dokument | 
  razlika\_od\_upita 
 strukture, 
 koja se sortira po parametru razlika\_od\_upita. 
 Za raèunanje razlike uzmeðu dva dokumenata koristimo cosinusnu teoremu za odreðivanje cosinusa ugla izmedju dva vektora kada se dokumenti predstave kao vektori u N-dimenzionalnom prostoru.

Za konkretan primer: $$Upit \ = access \ | \ becoming \ | \ documents$$

Za Upit ne moramo izraèunati dužinu vektora, jer je ona uvek ista, i nece se napraviti nikakva razlika prilikom poreðenja dokumenata.

$$access \ \rightarrow d5 \ | \ 0.7$$
$$becoming \ \rightarrow d5 \ | \ 0.7$$
$$documents \ \rightarrow d2 \ | \ 0.7$$

Sa sledecim dokumentima treba porediti upit: $d5, \ d2$

$$razlika\_od\_upita\left( upit, d5 \right) \ = \ \left(0.7+0.7\right)/1.86 \ = \ 0.75$$
$$razlika\_od\_upita\left( upit, d2 \right) \ = \ 0.7/2.10 \ = \ 0.33$$

Sortiramo: $razlika\_od\_upita( upit, d5 ), \ razlika\_od\_upita( upit, d2 )$

Iz sortirane liste može se videti koji su dokumenti najbliži upitu, koji su najdalji.

Odavde izbacimo listu

d5, d2.

Može se zapaziti da ovakav algoritam izbacuje i dokumenti ne sadrže sve termine iz upita. I da æe ako je razlika nekog dokumenta koji ne sadrži sve termine iz upita manja od dokumenta koji sadrži, da ce taj dokument koji ne sadrži sve termine iz upita biti ispred dokumenta koji sadrži.



